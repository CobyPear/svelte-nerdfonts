{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "Icon.svelte",
    "App.svelte"
  ],
  "sourcesContent": [
    "<script>\n\n    export let data;\n    let className;\n\n    export { className as class };\n    \n</script>\n\n<svg aria-label=\"{data.iconname}\"\n    viewBox=\"{data.viewbox}\"\n    class=\"icon {className}\">\n    {#each data.paths as path}\n        <path d=\"{path}\"/>\n    {/each}\n</svg>\n\n\n<style>\n    svg {\n        transform: translateY(20%);\n        display: inline-block;\n        fill: currentColor;\n        height: 1em;\n        overflow: visible;\n    }\n\n</style>\n",
    "<input type=\"text\" bind:value=\"{query}\"/>\n<main>\n    {#each displayIcons as [key, value]}\n        <button class=\"red\" on:click=\"{ () => toggle(value) }\">\n        <Icon data=\"{value}\" />\n        <div class=\"name\">{ value.name }</div>\n        <div class=\"group\">{ value.group }</div>\n    </button>\n    {/each}\n    \n    <pre>{ groupedImports }</pre>\n    <pre>{ combinedImports }</pre>\n</main>\n\n<script>\n    import Icon from '../components';\n    import * as icons from '../icons';\n    \n    let iconList = Object.entries(icons)\n        .map(([k, v]) => {\n            v.group = k.split(/[A-Z]/)[0];\n            v.name = k.replace(new RegExp(v.group), '');\n            v.name = v.name.replace(/^\\w/, (m) => m.toLowerCase());\n            v.fullname = k;\n            return [k, v];\n        });\n\n    let query = '';\n    let displayIcons = [];\n    let selectedIcons = [];\n    let groupedImports = '';\n    let combinedImports = '';\n\n\n    $: {\n        query;\n        search();\n    }\n\n    function search(){\n        displayIcons = iconList.filter(([key, value]) =>\n            key.toLowerCase().includes(query)\n        ).slice(0, 50); \n    }\n    \n    function createImport(icons, field='fullname', group){\n        let whitespace = icons.length > 2 ? '\\n' : ' ';\n        let tab = icons.length > 2 ? '    ' : '';\n        let seperator = ',' + whitespace;\n        let names = icons.map(i => tab + i[field]);\n        \n        let output = `import {${whitespace}${names.join(seperator)}${whitespace}}`;\n        output += ` from 'svelte-nerdfonts/icons${ group ? '/'+group : ''}';`\n        return output;\n    }\n\n    function toggle(icon){\n        let index = selectedIcons.indexOf(icon);\n        if(index >= 0){\n            selectedIcons.splice(index, 1);\n            selectedIcons = selectedIcons;\n        } else {\n            selectedIcons = [...selectedIcons, icon]\n        }\n\n        let grouped = selectedIcons.reduce((a, v) => {\n            a[v.group] = [...(a[v.group] || []), v];\n            return a;\n        }, {});\n\n        groupedImports = Object.entries(grouped)\n            .map(([k, v]) => createImport(v, 'name', k))\n            .join('\\n');\n        \n        combinedImports = createImport(selectedIcons);\n\n        console.log(groupedImports);\n        console.log(combinedImports);\n    }\n\n</script>\n\n<style>\n    button {\n        width: 7em;\n        margin: 5px;\n    }\n\n    button :global(.icon) {\n        display: inline-block;\n        width: 3em;\n        height: 3em;\n    }\n\n    .name {\n        margin-top: .5em;\n        font-size: 14px;\n    }\n\n    .group {\n        font-size: .7em;\n        font-style: italic;\n    }\n\n</style>\n"
  ],
  "names": [],
  "mappings": "AAmBI,GAAG,cAAC,CAAC,AACD,SAAS,CAAE,WAAW,GAAG,CAAC,CAC1B,OAAO,CAAE,YAAY,CACrB,IAAI,CAAE,YAAY,CAClB,MAAM,CAAE,GAAG,CACX,QAAQ,CAAE,OAAO,AACrB,CAAC;AC0DD,MAAM,cAAC,CAAC,AACJ,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,AACf,CAAC,AAED,oBAAM,CAAC,AAAQ,KAAK,AAAE,CAAC,AACnB,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,AACf,CAAC,AAED,KAAK,cAAC,CAAC,AACH,UAAU,CAAE,IAAI,CAChB,SAAS,CAAE,IAAI,AACnB,CAAC,AAED,MAAM,cAAC,CAAC,AACJ,SAAS,CAAE,IAAI,CACf,UAAU,CAAE,MAAM,AACtB,CAAC"
}